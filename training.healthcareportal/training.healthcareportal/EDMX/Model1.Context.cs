//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.necsws.healthcareportal.EDMX
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    
    public partial class HealthCareDBContext2 : DbContext
    {
        public HealthCareDBContext2()
            : base("name=HealthCareDBContext2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Appointment> Appointments { get; set; }
        public DbSet<Doctor> Doctors { get; set; }
        public DbSet<Doctor_Qualification> Doctor_Qualification { get; set; }
        public DbSet<Doctor_Services> Doctor_Services { get; set; }
        public DbSet<ModeOfPayment> ModeOfPayments { get; set; }
        public DbSet<Patient> Patients { get; set; }
        public DbSet<PatientDoctorDetail> PatientDoctorDetails { get; set; }
        public DbSet<Payment> Payments { get; set; }
        public DbSet<Permission> Permissions { get; set; }
        public DbSet<Qualification> Qualifications { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<Service> Services { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual int sp_NewDoctorRegistration(Nullable<int> iMA_No, string fullName, Nullable<System.DateTime> dOB, string gender, string email, Nullable<int> yearOfExperience, string password, Nullable<int> qualification_id, Nullable<int> service_id, Nullable<int> role_id, string username)
        {
            var iMA_NoParameter = iMA_No.HasValue ?
                new ObjectParameter("IMA_No", iMA_No) :
                new ObjectParameter("IMA_No", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var yearOfExperienceParameter = yearOfExperience.HasValue ?
                new ObjectParameter("YearOfExperience", yearOfExperience) :
                new ObjectParameter("YearOfExperience", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var qualification_idParameter = qualification_id.HasValue ?
                new ObjectParameter("Qualification_id", qualification_id) :
                new ObjectParameter("Qualification_id", typeof(int));
    
            var service_idParameter = service_id.HasValue ?
                new ObjectParameter("Service_id", service_id) :
                new ObjectParameter("Service_id", typeof(int));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("Role_id", role_id) :
                new ObjectParameter("Role_id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NewDoctorRegistration", iMA_NoParameter, fullNameParameter, dOBParameter, genderParameter, emailParameter, yearOfExperienceParameter, passwordParameter, qualification_idParameter, service_idParameter, role_idParameter, usernameParameter);
        }
    
        public virtual ObjectResult<GetDoctorListByServiceID_Result> GetDoctorListByServiceID(Nullable<int> service_ID)
        {
            var service_IDParameter = service_ID.HasValue ?
                new ObjectParameter("Service_ID", service_ID) :
                new ObjectParameter("Service_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorListByServiceID_Result>("GetDoctorListByServiceID", service_IDParameter);
        }
    
        public virtual ObjectResult<GetServiceListByDoctorID_Result> GetServiceListByDoctorID(Nullable<int> doctor_ID)
        {
            var doctor_IDParameter = doctor_ID.HasValue ?
                new ObjectParameter("Doctor_ID", doctor_ID) :
                new ObjectParameter("Doctor_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceListByDoctorID_Result>("GetServiceListByDoctorID", doctor_IDParameter);
        }
    
        public virtual int sp_NewPatientRegistration(string fullName, Nullable<System.DateTime> dOB, string gender, string email, string password, string bloodGroup, Nullable<double> weight, Nullable<double> height, string contactNumber, string address, string healthInsuranceID, string emergencyContactPersonDetails)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var bloodGroupParameter = bloodGroup != null ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var healthInsuranceIDParameter = healthInsuranceID != null ?
                new ObjectParameter("HealthInsuranceID", healthInsuranceID) :
                new ObjectParameter("HealthInsuranceID", typeof(string));
    
            var emergencyContactPersonDetailsParameter = emergencyContactPersonDetails != null ?
                new ObjectParameter("EmergencyContactPersonDetails", emergencyContactPersonDetails) :
                new ObjectParameter("EmergencyContactPersonDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_NewPatientRegistration", fullNameParameter, dOBParameter, genderParameter, emailParameter, passwordParameter, bloodGroupParameter, weightParameter, heightParameter, contactNumberParameter, addressParameter, healthInsuranceIDParameter, emergencyContactPersonDetailsParameter);
        }
    
        public virtual ObjectResult<sp_ViewPatientAppointment_Result> sp_ViewPatientAppointment(Nullable<int> doctorID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ViewPatientAppointment_Result>("sp_ViewPatientAppointment", doctorIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_DoctorIdByUsername(string username, ObjectParameter doctorID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_DoctorIdByUsername", usernameParameter, doctorID);
        }
    
        public virtual int sp_PassPatientId(string email, ObjectParameter patientID)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PassPatientId", emailParameter, patientID);
        }
    
        public virtual int sp_ChangePasswordByUsername(string password, string username)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangePasswordByUsername", passwordParameter, usernameParameter);
        }
    }
}
