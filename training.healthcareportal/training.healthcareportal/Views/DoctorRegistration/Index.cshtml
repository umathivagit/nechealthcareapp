@model com.necsws.healthcareportal.Models.DoctorRegisterationViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_GuestLayout.cshtml";
}
<div style="text-align: center">
    <h2>Registration for Doctor</h2>

</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IMANO, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.IMANO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IMANO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                    
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
       { new SelectListItem { Text = "Male", Value = "1",/* Selected=true*/},
         new SelectListItem { Text = "Female", Value = "2"},
         new SelectListItem { Text = "Alien", Value = "3"},
         }, "Select Gender", htmlAttributes: new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                   
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                 
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                    
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Qualification,  htmlAttributes: new { @class = "control-label col-md-4" })

                    @Html.DropDownListFor(model => model.Qualification_ID, new SelectList(Model.Qualification, "QualificationId", "QualificationName"), htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Qualification_ID, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Specialization, htmlAttributes: new { @class = "control-label col-md-4" })

                    @Html.DropDownListFor(model => model.Service_ID, new SelectList(Model.Specialization, "ServiceID", "ServiceName"), htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Service_ID, "", new { @class = "text-danger" })
                </div>
             
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-4" })
                    
                        @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                    </div>
                
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" class="btn btn-primary" />
                    &nbsp;&nbsp;
                    <input type="reset" value="Reset" class="btn btn-primary" OnClientClick="this.form.reset()";return  
            false;CausesValidation="false"/>

                </div>
                     
            </div>
        </div>
        
    </div>



}





































