@model com.necsws.healthcareportal.Models.PatientModel

@{
    ViewBag.Title = "Patient Registration";
    Layout = "~/Views/Shared/_GuestLayout.cshtml";

}
<div style="text-align:center">
    <h2 > New Patient Registration</h2>

</div>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="horizontal">

    <div class="row">
        <div class=" col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class=" col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="row">
        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                { new SelectListItem { Text = "Male", Value = "Male",/* Selected=true*/},
                new SelectListItem { Text = "Female", Value = "Female"},
                new SelectListItem { Text = "Alien", Value = "Alien"}
                }, "Select Gender", htmlAttributes: new { @class = "form-control" })

            </div>

        </div>

        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>


    <div class="row">
        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class=" col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>



    <div class="row">
        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class=" col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class=" col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.HealthInsuranceID, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.HealthInsuranceID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HealthInsuranceID, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class=" col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>

    <div class="row">
        <div class=" col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.EmergencyContact, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.EmergencyContact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:0px">

            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.TextAreaFor(model => model.Address, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-5">
                    <input type="submit" value="Register" class="btn btn-primary" />
                    <input type="submit" value="Reset" class="btn btn-primary" />

                </div>
            </div>
        </div>
    </div>
</div>
 </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
} 






